on:
  workflow_call:
    inputs:
      region:
        description: AWS region
        required: false
        type: string
        default: ap-northeast-2

      service_name:
        description: Service name
        required: true
        type: string

      service_port:
        description: Service elb listener port
        required: true
        type: string

      service_memory:
        description: Service memory resources
        required: false
        type: string
        default: 0.5 GB

      service_cpu:
        description: Service cpu resources
        required: false
        type: string
        default: 0.25 vCPU

env:
  AWS_ORG_ID: 778942390430
  ECR_IMAGE_TAG: dev
  ECS_SERVICE_SUFFIX: -dev
  ECS_TASK_DEF_SUFFIX: -development
  CLOUD_WATCH_LOG_GROUP_SUFFIX: /development
  CLOUD_WATCH_LOG_GROUP_RETENTION: 3
  MAIN_CONTAINER_PORT: 8000

jobs:
  prepare:
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read
      id-token: write

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ORG_ID }}:role/github-actions-cicd-role
          role-session-name: cicd
          aws-region: ${{ inputs.region }}

      - name: Create ECR repository
        uses: iDlabHQ/funpik-cicd/actions/aws/ecr/create-repository@main
        with:
          repository_name: ${{ inputs.service_name }}

      - name: Create CloudWatch log group
        uses: iDlabHQ/funpik-cicd/actions/aws/cloudwatch/create-log-group@main
        with:
          log_group_name: /ecs/${{ inputs.service_name }}${{ env.CLOUD_WATCH_LOG_GROUP_SUFFIX }}
          log_group_retention_in_days: ${{ env.CLOUD_WATCH_LOG_GROUP_RETENTION }}

      - name: Register ECS task definition
        uses: iDlabHQ/funpik-cicd/actions/aws/ecs/register-task-definition@main
        with:
          repository_name: ${{ inputs.service_name }}
          task_definition_name: ${{ inputs.service_name }}${{ env.ECS_TASK_DEF_SUFFIX }}
          task_role_arn: arn:aws:iam::${{ env.AWS_ORG_ID }}:role/ecs-tasks-role
          task_execution_role_arn: arn:aws:iam::${{ env.AWS_ORG_ID }}:role/ecs-tasks-execution-role
          memory: ${{ inputs.service_memory }}
          cpu: ${{ inputs.service_cpu }}
          image_tag: ${{ env.ECR_IMAGE_TAG }}
          registery_name: ${{ env.AWS_ORG_ID }}.dkr.ecr.ap-northeast-2.amazonaws.com
          log_group_name: /ecs/${{ inputs.service_name }}${{ env.CLOUD_WATCH_LOG_GROUP_SUFFIX }}
          container_port: ${{ env.MAIN_CONTAINER_PORT }}

  build:
    runs-on: ubuntu-latest

    needs:
      - prepare

    permissions:
      packages: write
      contents: read
      id-token: write

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ORG_ID }}:role/github-actions-cicd-role
          role-session-name: cicd
          aws-region: ${{ inputs.region }}

      - name: Checkout
        uses: actions/checkout@v3

      - name: Build & push
        uses: iDlabHQ/funpik-cicd/actions/docker/build-and-push@main
        with:
          repository_name: ${{ inputs.service_name }}
          image_tag: ${{ env.ECR_IMAGE_TAG }}
          cicd_git_token: ${{ secrets.GITHUB_TOKEN }}