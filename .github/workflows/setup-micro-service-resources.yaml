name: setup ecs service

on:
  workflow_call:
    inputs:
      environment:
        description: Environment
        required: true
        type: string

      repo_name:
        description: Repository name
        required: true
        type: string

      elb_target_group_name:
        description: Target group name
        required: true
        type: string

      elb_listener_port:
        description: Service port
        required: true
        type: string

      task_def_name:
        description: Service name
        required: true
        type: string

      service_name:
        description: Service name
        required: true
        type: string

      service_count:
        description: Service count
        required: true
        type: string

jobs:
  setup_ecr_repo:
    uses: iDlabHQ/funpik-cicd/.github/workflows/setup-ecr-repository.yaml@main
    with:
      environment: ${{ inputs.environment }}
      repo_name: ${{ inputs.repo_name }}

  setup_elb_resources:
    uses: iDlabHQ/funpik-cicd/.github/workflows/setup-elb-resources.yaml@main
    with:
      environment: ${{ inputs.environment }}
      elb_target_group_name: ${{ inputs.elb_target_group_name }}
      elb_listener_port: ${{ inputs.elb_listener_port }}

  setup_ecs_service_task_definition:
    uses: iDlabHQ/funpik-cicd/.github/workflows/setup-ecs-service-task-definition.yaml@main
    needs: setup_ecr_repo
    with:
      environment: ${{ inputs.environment }}
      repo_name: ${{ inputs.repo_name }}
      task_def_name: ${{ inputs.task_def_name }}

  setup_ecs_service:
    uses: iDlabHQ/funpik-cicd/.github/workflows/setup-ecs-service.yaml@main
    needs: 
      - setup_ecr_repo
      - setup_ecs_service_task_definition
    with:
      environment: ${{ inputs.environment }}
      repo_name: ${{ inputs.repo_name }}
      task_def_name: ${{ inputs.task_def_name }}
      service_name: ${{ inputs.service_name }}
      service_count: ${{ inputs.service_count }}