name: Python microservice setup

on:
  workflow_call:
    inputs:
      environment:
        description: Environment
        required: true
        type: string

      task_def_name:
        description: Service name
        required: true
        type: string

      repo_name:
        description: Repository name
        required: true
        type: string

      port:
        description: Service port
        required: true
        type: string

      service_name:
        description: Service name
        required: true
        type: string

      service_count:
        description: Service count
        required: true
        type: string

jobs:
  ecr_repo_setup:
    uses: iDlabHQ/funpik-cicd/.github/workflows/aws-ecr-create-repo.yaml@main
    with:
      environment: ${{ inputs.environment }}
      repo_name: ${{ inputs.repo_name }}
  
  elb_target_setup:
    uses: iDlabHQ/funpik-cicd/.github/workflows/aws-elb-create-python-service-elb-resources.yaml@main
    with:
      environment: ${{ inputs.environment }}
      repo_name: ${{ inputs.repo_name }}
      port: ${{ inputs.port }}

  ecs_service_taskdef_setup:
    uses: iDlabHQ/funpik-cicd/.github/workflows/aws-ecs-register-python-service-task-definition.yaml@main
    with:
      environment: ${{ inputs.environment }}
      repo_name: ${{ inputs.repo_name }}
      task_def_name: ${{ inputs.task_def_name }}

  ecs_service_setup:
    uses: iDlabHQ/funpik-cicd/.github/workflows/aws-ecs-create-ecs-service.yaml@main
    with:
      environment: ${{ inputs.environment }}
      repo_name: ${{ inputs.repo_name }}
      service_name: ${{ inputs.service_name }}
      service_count: ${{ inputs.service_count }}
      task_def_name: ${{ inputs.task_def_name }}